// src/helper/ssg/middleware.ts
var SSG_CONTEXT = "HONO_SSG_CONTEXT";
var SSG_DISABLED_RESPONSE = new Response("SSG is disabled", { status: 404 });
var ssgParams = (params) => async (c, next) => {
  ;
  c.req.raw.ssgParams = Array.isArray(params) ? params : await params(c);
  await next();
};
var isSSGContext = (c) => !!c.env?.[SSG_CONTEXT];
var disableSSG = () => async function disableSSG2(c, next) {
  if (isSSGContext(c)) {
    return SSG_DISABLED_RESPONSE;
  }
  await next();
};
var onlySSG = () => async function onlySSG2(c, next) {
  if (!isSSGContext(c)) {
    return c.notFound();
  }
  await next();
};
export {
  SSG_CONTEXT,
  SSG_DISABLED_RESPONSE,
  disableSSG,
  isSSGContext,
  onlySSG,
  ssgParams
};
